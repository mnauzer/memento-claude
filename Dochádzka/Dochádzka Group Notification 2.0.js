// ==============================================
// TRIGGER SCRIPT - DOCH√ÅDZKA GROUP NOTIFICATION
// Verzia: 2.0 | Typ: After Save Trigger
// Kni≈ænica: Doch√°dzka | Artifact: 1
// ==============================================
// üìã FUNKCIA:
//    - Po ulo≈æen√≠ z√°znamu doch√°dzky po≈°le s√∫hrnn√∫ spr√°vu
//    - Do Telegram skupiny/t√©my (thread)
//    - Obsahuje prehƒæad v≈°etk√Ωch zamestnancov a celkov√© √∫daje
//    - Kontroluje nastavenie v ASISTANTO Defaults
// ‚úÖ v2.0 REFAKTORIZ√ÅCIA:
//    - Vyu≈æitie MementoUtils 3.0 centralizovan√Ωch funkci√≠
//    - ASISTANTO Notifications Helper pre spr√°vu notifik√°ci√≠
//    - Odstr√°nen√© duplicitn√© funkcie
//    - ƒåistej≈°√≠ a krat≈°√≠ k√≥d
// ==============================================
// üìå FORM√ÅTY pre "Telegram Doch√°dzka ID":
//    - Obyƒçajn√° skupina: "-1001234567890"
//    - T√©ma v supergroup: "-1001234567890/123"
//    - S√∫kromn√Ω chat: "123456789"
// ==============================================

// Import kni≈æn√≠c
var utils = MementoUtils;
var notifHelper = ASISTANTONotifications;
var currentEntry = entry();

// Konfigur√°cia
var CONFIG = {
    debug: true,
    version: "2.0",
    scriptName: "Doch√°dzka Group Notification",
    
    // Kni≈ænice
    apiLibrary: "ASISTANTO API",
    defaultsLibrary: "ASISTANTO Defaults",
    notificationsLibrary: "ASISTANTO Notifications",
    
    // N√°zvy pol√≠ v Defaults
    defaultsFields: {
        dochadzkaEnabled: "doch√°dzka",
        telegramGroupId: "Telegram Doch√°dzka ID",
        nazovFirmy: "N√°zov firmy"
    },
    
    // N√°zvy pol√≠ v Doch√°dzke
    fields: {
        zamestnanci: "Zamestnanci",
        datum: "D√°tum",
        prichod: "Pr√≠chod",
        odchod: "Odchod",
        pracovnaDoba: "Pracovn√° doba",
        pocetPracovnikov: "Poƒçet pracovn√≠kov",
        odpracovane: "Odpracovan√©",
        mzdoveNaklady: "Mzdov√© n√°klady",
        projekt: "Projekt/Z√°kazka",
        poznamka: "Pozn√°mka"
    },
    
    // Atrib√∫ty
    attributes: {
        odpracovane: "odpracovan√©",
        hodinovka: "hodinovka",
        priplatok: "+pr√≠platok (‚Ç¨/h)",
        premia: "+pr√©mia (‚Ç¨)",
        pokuta: "-pokuta (‚Ç¨)",
        dennaMzda: "denn√° mzda"
    }
};

// ==============================================
// VYTVORENIE S√öHRNNEJ SPR√ÅVY
// ==============================================

function vytvorSuhrnnuSpravu(settings) {
    var datum = utils.safeGet(currentEntry, CONFIG.fields.datum, new Date());
    var prichod = utils.safeGet(currentEntry, CONFIG.fields.prichod, null);
    var odchod = utils.safeGet(currentEntry, CONFIG.fields.odchod, null);
    var pracovnaDoba = utils.safeGet(currentEntry, CONFIG.fields.pracovnaDoba, 0);
    var pocetPracovnikov = utils.safeGet(currentEntry, CONFIG.fields.pocetPracovnikov, 0);
    var odpracovaneTotal = utils.safeGet(currentEntry, CONFIG.fields.odpracovane, 0);
    var mzdoveNaklady = utils.safeGet(currentEntry, CONFIG.fields.mzdoveNaklady, 0);
    var poznamka = utils.safeGet(currentEntry, CONFIG.fields.poznamka, "");
    
    // Projekt
    var projekt = "";
    var projektField = utils.safeGet(currentEntry, CONFIG.fields.projekt, null);
    if (projektField && Array.isArray(projektField) && projektField.length > 0) {
        projekt = utils.safeGet(projektField[0], "N√°zov z√°znamu", "") || 
                 utils.safeGet(projektField[0], "ƒå√≠slo", "") || "";
    }
    
    // Zaƒçiatok spr√°vy
    var sprava = "üìä **DOCH√ÅDZKA - DENN√ù S√öHRN**\n";
    sprava += "üè¢ " + settings.firmName + "\n";
    
    // D√°tum s d≈àom v t√Ω≈ædni
    var dayNames = ["Nedeƒæa", "Pondelok", "Utorok", "Streda", "≈†tvrtok", "Piatok", "Sobota"];
    var dayOfWeek = dayNames[moment(datum).day()];
    sprava += "üìÖ " + moment(datum).format("DD.MM.YYYY") + " (" + dayOfWeek + ")\n";
    
    sprava += "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\n";
    
    // Z√°kladn√© info
    sprava += "‚è∞ **Pracovn√Ω ƒças:** " + utils.formatTime(prichod) + " - " + utils.formatTime(odchod) + "\n";
    sprava += "‚è±Ô∏è **Pracovn√° doba:** " + pracovnaDoba + " hod√≠n\n";
    sprava += "üë• **Poƒçet pracovn√≠kov:** " + pocetPracovnikov + "\n";
    
    if (projekt) {
        sprava += "üì¶ **Projekt:** " + projekt + "\n";
    }
    
    sprava += "\n";
    
    // Detail zamestnancov
    var zamestnanci = utils.safeGet(currentEntry, CONFIG.fields.zamestnanci, []);
    
    if (zamestnanci.length > 0) {
        sprava += "üë∑ **ZAMESTNANCI:**\n";
        sprava += "```\n";
        
        for (var i = 0; i < zamestnanci.length; i++) {
            var zamestnanec = zamestnanci[i];
            if (!zamestnanec) continue;
            
            var meno = utils.formatEmployeeName(zamestnanec);
            var odpracovane = utils.safeGetAttribute(currentEntry, CONFIG.fields.zamestnanci, i, CONFIG.attributes.odpracovane, pracovnaDoba);
            var hodinovka = utils.safeGetAttribute(currentEntry, CONFIG.fields.zamestnanci, i, CONFIG.attributes.hodinovka, 0);
            var dennaMzda = utils.safeGetAttribute(currentEntry, CONFIG.fields.zamestnanci, i, CONFIG.attributes.dennaMzda, 0);
            
            sprava += (i + 1) + ". " + meno + "\n";
            sprava += "   ‚Ä¢ Odpracovan√©: " + odpracovane + "h\n";
            sprava += "   ‚Ä¢ Hodinovka: " + hodinovka + " ‚Ç¨/h\n";
            sprava += "   ‚Ä¢ Denn√° mzda: " + utils.formatMoney(dennaMzda) + "\n";
            
            if (i < zamestnanci.length - 1) sprava += "\n";
        }
        
        sprava += "```\n\n";
    }
    
    // S√∫hrn
    sprava += "üí∞ **CELKOV√ù S√öHRN:**\n";
    sprava += "‚Ä¢ Odpracovan√© spolu: **" + odpracovaneTotal + " hod√≠n**\n";
    sprava += "‚Ä¢ Mzdov√© n√°klady: **" + utils.formatMoney(mzdoveNaklady) + "**\n";
    sprava += "‚Ä¢ Priemer na osobu: **" + (pocetPracovnikov > 0 ? 
              utils.formatMoney(mzdoveNaklady / pocetPracovnikov) : "0 ‚Ç¨") + "**\n";
    
    if (poznamka) {
        sprava += "\nüìù _Pozn√°mka: " + poznamka + "_\n";
    }
    
    sprava += "\n---\n";
    sprava += "ü§ñ _Automatick√° notifik√°cia | " + moment().format("HH:mm:ss") + "_";
    
    return sprava;
}

// ==============================================
// HLAVN√Å FUNKCIA
// ==============================================

function main() {
    // Zabezpeƒçenie ≈æe script be≈æ√≠ len ako After Save trigger
    if (typeof entry === 'undefined' || !entry()) {
        return;
    }
    
    try {
        utils.addDebug(currentEntry, "\nüöÄ === ≈†TART " + CONFIG.scriptName + " v" + CONFIG.version + " ===");
        
        // 1. Naƒç√≠taj nastavenia z Defaults
        var settings = utils.getSettings(CONFIG.defaultsLibrary);
        if (!settings) {
            utils.addDebug(currentEntry, "‚ùå Nepodarilo sa naƒç√≠ta≈• nastavenia");
            return;
        }
        
        var enabled = settings[CONFIG.defaultsFields.dochadzkaEnabled] || false;
        var groupId = settings[CONFIG.defaultsFields.telegramGroupId] || "";
        var firmName = settings[CONFIG.defaultsFields.nazovFirmy] || "Firma";
        
        utils.addDebug(currentEntry, "üìã Nastavenia: enabled=" + enabled + ", groupId=" + groupId);
        
        // 2. Skontroluj ƒçi je funkcia zapnut√°
        if (!enabled) {
            utils.addDebug(currentEntry, "‚è∏Ô∏è Group notifik√°cie s√∫ vypnut√©");
            return;
        }
        
        // 3. Skontroluj group ID
        if (!groupId) {
            utils.addError(currentEntry, "Ch√Ωba Telegram Group ID v nastaveniach", "main");
            utils.addDebug(currentEntry, "üí° TIP: Do poƒæa 'Telegram Doch√°dzka ID' zadaj:");
            utils.addDebug(currentEntry, "   ‚Ä¢ Pre skupinu: -1001234567890");
            utils.addDebug(currentEntry, "   ‚Ä¢ Pre t√©mu: -1001234567890/123");
            return;
        }
        
        // 4. Vytvor s√∫hrnn√∫ spr√°vu
        var sprava = vytvorSuhrnnuSpravu({
            firmName: firmName
        });
        utils.addDebug(currentEntry, "üìù S√∫hrnn√° spr√°va vytvoren√° (" + sprava.length + " znakov)");
        
        // 5. Parsuj group/thread ID
        var groupId = groupId.toString();
        var threadId = null;
        
        if (groupId.indexOf("/") > -1) {
            var parts = groupId.split("/");
            groupId = parts[0].trim();
            threadId = parts[1] ? parts[1].trim() : null;
            
            utils.addDebug(currentEntry, "üìå Detekovan√° t√©ma v supergroup:");
            utils.addDebug(currentEntry, "   ‚Ä¢ Group ID: " + groupId);
            utils.addDebug(currentEntry, "   ‚Ä¢ Thread ID: " + threadId);
        } else {
            utils.addDebug(currentEntry, "üìå Obyƒçajn√° skupina: " + groupId);
        }
        
        // 6. Odo≈°li spr√°vu pomocou MementoUtils 3.0
        var result = utils.sendTelegramMessage(groupId, sprava, {
            threadId: threadId,
            parseMode: "Markdown"
        });
        
        if (result.success) {
            utils.addDebug(currentEntry, "‚úÖ Spr√°va √∫spe≈°ne odoslan√° do skupiny");
            utils.addDebug(currentEntry, "   ‚Ä¢ Message ID: " + (result.messageId || "N/A"));
            if (threadId) {
                utils.addDebug(currentEntry, "   ‚Ä¢ Thread ID: " + threadId);
            }
            
            // 7. Vytvor z√°znam notifik√°cie pomocou Notifications Helper
            var notifData = {
                typSpravy: "Doch√°dzka",
                zdrojSpravy: "Automatick√°",
                sprava: sprava,
                formatovanie: "Markdown",
                adresat: threadId ? "Skupina-T√©ma" : "Skupina",
                chatId: groupId,
                temaId: threadId,
                zdrojovaKniznica: "Doch√°dzka",
                zdrojovyId: currentEntry.field("ID")
            };
            
            var notifikacia = notifHelper.createNotification(notifData);
            if (notifikacia) {
                // Aktualizuj response data
                utils.safeSet(notifikacia, "Message ID", result.messageId);
                utils.safeSet(notifikacia, "Odoslan√© o", moment().toDate());
                utils.safeSet(notifikacia, "Status", "Odoslan√©");
                
                utils.addDebug(currentEntry, "‚úÖ Notifik√°cia zaznamenan√° v kni≈ænici");
            }
            
            utils.addDebug(currentEntry, "\n‚úÖ === GROUP NOTIFICATION √öSPE≈†N√Å ===");
        } else {
            utils.addError(currentEntry, "Nepodarilo sa posla≈• spr√°vu: " + result.error, "main");
            
            // Vytvor z√°znam ne√∫spe≈°nej notifik√°cie
            var failedNotifData = {
                typSpravy: "Doch√°dzka",
                zdrojSpravy: "Automatick√°",
                sprava: sprava,
                formatovanie: "Markdown",
                adresat: threadId ? "Skupina-T√©ma" : "Skupina",
                chatId: groupId,
                temaId: threadId,
                zdrojovaKniznica: "Doch√°dzka",
                zdrojovyId: currentEntry.field("ID"),
                status: "Zlyhalo",
                poslednaChyba: result.error
            };
            
            notifHelper.createNotification(failedNotifData);
        }
        
    } catch (error) {
        utils.addError(currentEntry, error, "main-critical");
    }
}

// Spustenie
main();