// ==============================================
// ACTION SCRIPT - DOCH√ÅDZKA NOTIFIK√ÅCIE
// Verzia: 3.0 | Typ: Action Script
// Kni≈ænica: Doch√°dzka
// Autor: Refactored by AI Assistant
// ==============================================
// ‚úÖ NOV√â v3.0 - REFAKTORING S MEMENTOUTILS:
// - Vyu≈æ√≠va MementoUtils v2.2 pre v≈°etky utility funkcie
// - ≈†trukt√∫ra k√≥du podƒæa vzoru Doch√°dzka Prepoƒçet v3.2
// - Odstr√°nen√© duplicitn√© a vlastn√© pomocn√© funkcie
// - Dynamick√© spr√°vy obsahuj√∫ iba polia a atrib√∫ty s hodnotou
// - Spr√°vne naƒç√≠tanie atrib√∫tov zamestnanca
// - Konzistentn√© logovanie do Debug_Log, Error_Log a info pol√≠
// ==============================================

function hlavnaFunkcia() {
    var utils = MementoUtils;
    var currentEntry = entry();

    // Konfigur√°cia
    var CONFIG = {
        version: "3.0",
        scriptName: "Doch√°dzka Notifik√°cie",
        defaultsLibrary: "ASISTANTO Defaults",
        apiLibrary: "ASISTANTO API",
        fields: {
            zamestnanci: "Zamestnanci",
            datum: "D√°tum",
            prichod: "Pr√≠chod",
            odchod: "Odchod",
            poznamka: "Pozn√°mka",
            pracovnaDoba: "Pracovn√° doba",
            info: "info",
            debugLog: "Debug_Log",
            errorLog: "Error_Log"
        },
        attributes: {
            hodinovka: "hodinovka",
            priplatok: "+pr√≠platok (‚Ç¨/h)",
            premia: "+pr√©mia (‚Ç¨)",
            pokuta: "-pokuta (‚Ç¨)",
            dennaMzda: "denn√° mzda",
            poznamka: "pozn√°mka"
        }
    };

    // ==============================================
    // POMOCN√â FUNKCIE
    // ==============================================

    /**
     * Naƒç√≠ta n√°zov firmy z kni≈ænice s predvolen√Ωmi nastaveniami.
     */
    function getNazovFirmy() {
        utils.addDebug(currentEntry, "üè¢ Naƒç√≠tavam n√°zov firmy...", { location: "getNazovFirmy" });
        try {
            var defaultsLib = libByName(CONFIG.defaultsLibrary);
            if (!defaultsLib) {
                utils.addError(currentEntry, "Kni≈ænica " + CONFIG.defaultsLibrary + " nen√°jden√°.", "getNazovFirmy");
                return "Default Firma";
            }
            var defaultsEntry = defaultsLib.entries()[0];
            if (!defaultsEntry) {
                utils.addError(currentEntry, "≈Ωiadne z√°znamy v " + CONFIG.defaultsLibrary, "getNazovFirmy");
                return "Default Firma";
            }
            var nazov = utils.safeGet(defaultsEntry, "N√°zov firmy", "Default Firma");
            utils.addDebug(currentEntry, "‚úÖ N√°zov firmy: " + nazov, { location: "getNazovFirmy" });
            return nazov;
        } catch (e) {
            utils.addError(currentEntry, e, "getNazovFirmy");
            return "Default Firma";
        }
    }

    /**
     * Vytvor√≠ personalizovan√∫ spr√°vu pre Telegram.
     * Prid√°va iba polia a atrib√∫ty s nenulovou hodnotou.
     */
    function vytvorTelegramSpravu(dochadzka, zamestnanec, zamestnanecIndex, firmaNazov) {
        var celeMeno = utils.formatEmployeeName(zamestnanec) || "Zamestnanec";
        var sprava = "üè¢ **Evidencia doch√°dzky**\n\n";
        sprava += "Dobr√Ω de≈à **" + celeMeno + "**,\n\n";

        // Z√°kladn√© √∫daje o doch√°dzke
        var datum = utils.safeGet(dochadzka, CONFIG.fields.datum);
        if (datum) {
            sprava += "üìÖ D√°tum: **" + moment(datum).format("DD.MM.YYYY") + "**\n";
        }

        var prichod = utils.safeGet(dochadzka, CONFIG.fields.prichod);
        if (prichod) {
            sprava += "üïê Pr√≠chod: **" + utils.formatTime(prichod) + "**\n";
        }

        var odchod = utils.safeGet(dochadzka, CONFIG.fields.odchod);
        if (odchod) {
            sprava += "üïê Odchod: **" + utils.formatTime(odchod) + "**\n";
        }
        
        var pracovnaDoba = utils.safeGet(dochadzka, CONFIG.fields.pracovnaDoba, 0);
        if (pracovnaDoba > 0) {
            sprava += "‚è±Ô∏è Pracovn√° doba: **" + pracovnaDoba.toFixed(2) + " h**\n";
        }

        // Mzdov√© √∫daje (atrib√∫ty)
        var mzdoveUdaje = [];
        var hodinovka = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.hodinovka, 0);
        if (hodinovka) mzdoveUdaje.push("‚Ä¢ Hodinovka: " + utils.formatMoney(hodinovka, "‚Ç¨/h"));
        
        var priplatok = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.priplatok, 0);
        if (priplatok) mzdoveUdaje.push("‚Ä¢ Pr√≠platok: " + utils.formatMoney(priplatok, "‚Ç¨/h"));

        var premia = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.premia, 0);
        if (premia) mzdoveUdaje.push("‚Ä¢ Pr√©mia: **" + utils.formatMoney(premia) + "**");

        var pokuta = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.pokuta, 0);
        if (pokuta) mzdoveUdaje.push("‚Ä¢ Pokuta: **-" + utils.formatMoney(pokuta) + "**");

        var dennaMzda = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.dennaMzda, 0);
        if (dennaMzda) mzdoveUdaje.push("‚Ä¢ Denn√° mzda: **" + utils.formatMoney(dennaMzda) + "**");

        if (mzdoveUdaje.length > 0) {
            sprava += "\nüí∞ **Mzdov√© √∫daje:**\n" + mzdoveUdaje.join("\n");
        }
        
        // Pozn√°mky
        var poznamkaZaznam = utils.safeGet(dochadzka, CONFIG.fields.poznamka, "");
        if (poznamkaZaznam) {
            sprava += "\n\nüìù **Pozn√°mka zo z√°znamu:**\n_" + poznamkaZaznam + "_";
        }
        
        var poznamkaAtribut = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.poznamka, "");
        if (poznamkaAtribut) {
            sprava += "\n\nüìù **Pozn√°mka zamestnanca:**\n_" + poznamkaAtribut + "_";
        }

        sprava += "\n\n---\n" + firmaNazov + " | " + moment().format("DD.MM.YYYY HH:mm");
        return sprava;
    }

    /**
     * Vytvor√≠ skr√°ten√∫ SMS spr√°vu.
     */
    function vytvorSmsSpravu(dochadzka, zamestnanec, zamestnanecIndex, firmaNazov) {
        var nick = utils.safeGet(zamestnanec, "Nick") || utils.safeGet(zamestnanec, "Meno") || "Zamestnanec";
        var sprava = "Ahoj " + nick + ", doch√°dzka " + moment(utils.safeGet(dochadzka, CONFIG.fields.datum)).format("DD.MM") + ": ";
        
        var prichod = utils.safeGet(dochadzka, CONFIG.fields.prichod);
        var odchod = utils.safeGet(dochadzka, CONFIG.fields.odchod);
        
        if (prichod && odchod) {
             sprava += utils.formatTime(prichod) + "-" + utils.formatTime(odchod);
        } else if (prichod) {
            sprava += "pr√≠chod " + utils.formatTime(prichod);
        }

        var dennaMzda = utils.safeGetAttribute(dochadzka, CONFIG.fields.zamestnanci, zamestnanecIndex, CONFIG.attributes.dennaMzda, 0);
        if (dennaMzda) {
            sprava += ", Mzda: " + utils.formatMoney(dennaMzda);
        }
        
        sprava += ". " + firmaNazov;
        return sprava;
    }

    /**
     * Vytvor√≠ emailov√∫ spr√°vu (odstr√°ni Markdown).
     */
    function vytvorEmailSpravu(dochadzka, zamestnanec, zamestnanecIndex, firmaNazov) {
        var telegramSprava = vytvorTelegramSpravu(dochadzka, zamestnanec, zamestnanecIndex, firmaNazov);
        return telegramSprava.replace(/\*\*/g, "").replace(/_/g, "");
    }

    /**
     * Odo≈°le notifik√°cie pre jedn√©ho zamestnanca na z√°klade jeho nastaven√≠.
     */
    function posliNotifikacieZamestnancovi(dochadzka, zamestnanec, index, apiKeys, firmaNazov) {
        var meno = utils.formatEmployeeName(zamestnanec);
        var uspesnePoslane = 0;
        var celkovePokusy = 0;

        utils.addDebug(currentEntry, "üë§ Spracov√°vam notifik√°cie pre: " + meno, { location: "posliNotifikacie" });

        // --- TELEGRAM ---
        if (utils.safeGet(zamestnanec, "telegram", false)) {
            var chatId = utils.safeGet(zamestnanec, "Telegram ID", "");
            if (chatId && apiKeys.telegramToken) {
                celkovePokusy++;
                var telegramSprava = vytvorTelegramSpravu(dochadzka, zamestnanec, index, firmaNazov);
                if (utils.sendTelegramMessage(chatId, telegramSprava, apiKeys.telegramToken, "Markdown", currentEntry)) {
                    uspesnePoslane++;
                    utils.addDebug(currentEntry, "‚úÖ Telegram notifik√°cia √∫spe≈°ne odoslan√° pre " + meno);
                } else {
                    utils.addError(currentEntry, "Zlyhalo odoslanie Telegram notifik√°cie pre " + meno, "posliNotifikacie");
                }
            } else {
                utils.addDebug(currentEntry, "‚ö†Ô∏è Telegram notifik√°cia preskoƒçen√° pre " + meno + " (ch√Ωba Chat ID alebo API token).");
            }
        }
        
        // --- SMS (Simul√°cia) ---
        if (utils.safeGet(zamestnanec, "sms", false)) {
             var telefon = utils.safeGet(zamestnanec, "Mobil", "");
             if (telefon) {
                celkovePokusy++;
                var smsSprava = vytvorSmsSpravu(dochadzka, zamestnanec, index, firmaNazov);
                // V Memento nie je priama funkcia na odoslanie SMS. Toto je len simul√°cia.
                // Pre re√°lnu funkƒçnos≈• je potrebn√° integr√°cia cez HTTP API (napr. Twilio).
                message("SMS pre " + meno + " ("+telefon+"): " + smsSprava); // Zobraz√≠ spr√°vu u≈æ√≠vateƒæovi
                uspesnePoslane++;
                utils.addDebug(currentEntry, "‚úÖ SMS notifik√°cia (simul√°cia) pre " + meno + " na ƒç√≠slo " + telefon);
             } else {
                utils.addDebug(currentEntry, "‚ö†Ô∏è SMS notifik√°cia preskoƒçen√° pre " + meno + " (ch√Ωba mobil).");
             }
        }

        // --- EMAIL (Simul√°cia) ---
        if (utils.safeGet(zamestnanec, "email", false)) {
            var email = utils.safeGet(zamestnanec, "Email", "");
            if (email) {
                celkovePokusy++;
                var emailSprava = vytvorEmailSpravu(dochadzka, zamestnanec, index, firmaNazov);
                // V Memento nie je priama funkcia na odoslanie emailu. Toto je len simul√°cia.
                // Pre re√°lnu funkƒçnos≈• je potrebn√° integr√°cia cez HTTP API (napr. SendGrid, Mailgun).
                message("Email pre " + meno + " ("+email+"): " + emailSprava); // Zobraz√≠ spr√°vu u≈æ√≠vateƒæovi
                uspesnePoslane++;
                utils.addDebug(currentEntry, "‚úÖ Email notifik√°cia (simul√°cia) pre " + meno + " na adresu " + email);
            } else {
                 utils.addDebug(currentEntry, "‚ö†Ô∏è Email notifik√°cia preskoƒçen√° pre " + meno + " (ch√Ωba email).");
            }
        }
        
        return { success: uspesnePoslane > 0, sent: uspesnePoslane, attempts: celkovePokusy };
    }


    // ==============================================
    // MAIN SCRIPT EXECUTION
    // ==============================================
    try {
        utils.clearLogs(currentEntry, false);
        utils.addDebug(currentEntry, "üöÄ === ≈†TART " + CONFIG.scriptName + " v" + CONFIG.version + " ===");

        // KROK 1: Naƒç√≠tanie konfigur√°cie
        var firmaNazov = getNazovFirmy();
        var telegramToken = utils.getApiKey("Telegram", CONFIG.apiLibrary, currentEntry);
        var apiKeys = { telegramToken: telegramToken };

        // KROK 2: Naƒç√≠tanie zamestnancov
        var zamestnanci = utils.safeGetLinks(currentEntry, CONFIG.fields.zamestnanci);
        if (!zamestnanci || zamestnanci.length === 0) {
            utils.addError(currentEntry, "V z√°zname nie s√∫ priraden√≠ ≈æiadni zamestnanci.", "main");
            message("‚ùå ≈Ωiadni zamestnanci v z√°zname.");
            return;
        }
        utils.addDebug(currentEntry, "üë• N√°jden√Ωch " + zamestnanci.length + " zamestnancov na spracovanie.");

        // KROK 3: Odoslanie notifik√°ci√≠
        var celkomUspesnych = 0;
        var celkomPokusov = 0;
        
        for (var i = 0; i < zamestnanci.length; i++) {
            var zamestnanec = zamestnanci[i];
            if (zamestnanec) {
                var vysledok = posliNotifikacieZamestnancovi(currentEntry, zamestnanec, i, apiKeys, firmaNazov);
                if (vysledok.success) {
                    celkomUspesnych++;
                }
                celkomPokusov += vysledok.attempts;
            }
        }

        // KROK 4: Fin√°lny report
        var pocetSpracovanych = zamestnanci.length;
        var vysledokSprava = "üìß NOTIFIK√ÅCIE v" + CONFIG.version + " DOKONƒåEN√â\n\n" +
            "‚úÖ Refaktorovan√© s MementoUtils v" + utils.version + "\n" +
            "üè¢ N√°zov firmy: " + firmaNazov + "\n" +
            "üìä V√Ωsledok: " + celkomUspesnych + "/" + pocetSpracovanych + " zamestnancov obdr≈æalo aspo≈à 1 notifik√°ciu.\n" +
            "üì§ Celkovo odoslan√Ωch pokusov: " + celkomPokusov + "\n\n" +
            "üí° V spr√°vach s√∫ len atrib√∫ty a polia s nenulovou hodnotou.";

        utils.safeSet(currentEntry, CONFIG.fields.info, vysledokSprava);
        
        if (celkomUspesnych === pocetSpracovanych) {
            message("üéâ " + vysledokSprava);
        } else if (celkomUspesnych > 0) {
            message("‚ö†Ô∏è " + vysledokSprava);
        } else {
            message("üîç " + vysledokSprava + "\n\nSkontroluj Debug_Log a Error_Log pre detaily.");
        }

        utils.addDebug(currentEntry, "üèÅ === KONIEC " + CONFIG.scriptName + " ===");

    } catch (criticalError) {
        utils.addError(currentEntry, criticalError, "MAIN-CRITICAL");
        message("üí• KRITICK√Å CHYBA!\n\n" + criticalError.toString() + "\n\nSkontroluj Error_Log.");
    } finally {
        utils.saveLogs(currentEntry);
    }
}

// Spustenie hlavnej funkcie
hlavnaFunkcia();
