// ==============================================
// MEMENTO CONFIG - Centralizovan√° konfigur√°cia
// Verzia: 7.0 | D√°tum: August 2025 | Autor: ASISTANTO
// ==============================================
// üìã √öƒåEL:
//    - Centr√°lny CONFIG pre v≈°etky scripty
//    - V≈°etky n√°zvy kni≈æn√≠c, pol√≠ a atrib√∫tov
//    - Glob√°lne nastavenia a kon≈°tanty
//    - Jednoduch√Ω pr√≠stup cez API
// ==============================================
// üîß CHANGELOG v7.0:
//    - Kompletne nov√° ≈°trukt√∫ra bez sp√§tnej kompatibility
//    - V≈°etky n√°zvy pol√≠ z re√°lnych .mlt2 s√∫borov
//    - Lazy loading podpora
//    - Slovensk√© koment√°re
// ==============================================

var MementoConfig = (function() {
    'use strict';
    
    // Intern√° konfigur√°cia
    var CONFIG = {
        version: "7.0",
        // Defaultn√© hodnoty pre glob√°lne nastavenia
        defaults: {
            debug: false, // Predvolen√Ω debug m√≥d
            workHoursPerDay: 8, // Predvolen√° pracovn√° doba za de≈à
            roundToQuarterHour: false // Zaokr√∫hƒæovanie na 15 min√∫t
        },

        // === GLOB√ÅLNE NASTAVENIA ===
        global: {
            debug: true,
            defaultTimeout: 30000,
            dateFormat: "DD.MM.YYYY",
            timeFormat: "HH:mm",
            timezone: "Europe/Bratislava",
            currency: "EUR",
            currencySymbol: "‚Ç¨",
            language: "sk_SK"
        },
        
        // === N√ÅZVY KNI≈ΩN√çC ===
        libraries: {
            // Evidencia - denn√© z√°znamy
            attendance: "Doch√°dzka",
            workRecords: "Z√°znam pr√°ce",
            rideLog: "Kniha j√°zd",
            cashBook: "Poklad≈àa",
    
            // Evidencia pomocn√©
            workReport: "V√Ωkaz pr√°c",
            materialsReport: "V√Ωkaz materi√°lu",
            transportReport: "V√Ωkaz dopravy",
            machinesReport: "V√Ωkaz strojov",
            
            priceList: "Cenn√≠k pr√°c",
            inventory: "Sklad",
            
            // Historical data 
            workPrices: "ceny pr√°c",
            materialPrices: "ceny materi√°lu",
            wages: "sadzby zamestnancov",
            
            // Syst√©mov√© kni≈ænice
            defaults: "ASISTANTO Defaults",
            apiKeys: "ASISTANTO API",
            globalLogs: "ASISTANTO Logs",
            
            // Firemn√© kni≈ænice
            employees: "Zamestnanci",
            suppliers: "Dod√°vatelia",
            partners: "Partneri",
            clients: "Klienti",
            vehicles: "Vozidl√°",
            machines: "Stroje",
            places: "Miesta",
            addresses: "Adresy",
            accounts: "√öƒçty",
            
            // Obchodn√© dokumenty
            quotes: "Cenov√© ponuky",
            orders: "Z√°kazky",
            orderSettlements: "Vy√∫ƒçtovania",
            issuedInvoices: "Vystaven√© fakt√∫ry", // pridan√©
            receivedInvoices: "Prijat√© fakt√∫ry", // pridan√©
            receivables: "Pohƒæad√°vky",
            obligations: "Z√°v√§zky",
            
            // Telegram kni≈ænice
            notifications: "Notifications",
            telegramGroups: "Telegram Groups"
        },
        
        // === N√ÅZVY POL√ç ===
        fields: {
            // Spoloƒçn√© polia vo v≈°etk√Ωch kni≈æniciach
            common: {
                id: "ID",
                view: "view",
                debugLog: "Debug_Log",
                errorLog: "Error_Log",
                info: "info",
                createdBy: "zap√≠sal",
                modifiedBy: "upravil",
                createdDate: "d√°tum z√°pisu",
                modifiedDate: "d√°tum √∫pravy",
                rowColor: "farba z√°znamu",
                backgroundColor: "farba pozadia",
                debugFields: "Debug_Fields",
                infoTelegram: "info_telegram",    // NOV√â
                notifications: "Notifik√°cie",     // NOV√â - link field
            },
            workPrices: {
                work: "Pr√°ca",  // Pole ktor√© odkazuje sp√§≈• na HZS
                validFrom: "Platnos≈• od",
                price: "Cena"
            },
            orders: {
                telegramGroup: "Telegram skupina"
            },
            // Doch√°dzka polia
            attendance: {
                date: "D√°tum",
                arrival: "Pr√≠chod",
                departure: "Odchod",
                employees: "Zamestnanci",
                works: "Pr√°ce",
                rides: "Jazdy",
                obligations: "Z√°v√§zky",
                employeeCount: "Poƒçet pracovn√≠kov",
                workTime: "Pracovn√° doba",
                workedHours: "Odpracovan√©",
                onProjects: "Na z√°kazk√°ch",
                downtime: "Prestoje",
                wageCosts: "Mzdov√© n√°klady",
                keys: "keys",
                notifications: "Notifik√°cie",
                employeeAttributes: {
                    workedHours: "odpracovan√©",
                    hourlyRate: "hodinovka",
                    bonus: "+pr√≠platok (‚Ç¨/h)",
                    premium: "+pr√©mia (‚Ç¨)",
                    penalty: "-pokuta (‚Ç¨)",
                    dailyWage: "denn√° mzda",
                    note: "pozn√°mka"
                },
            },
            // Z√°znam pr√°ce polia
            workRecord: {
                date: "D√°tum",
                customer: "Z√°kazka",
                employees: "Zamestnanci",
                hzs: "Hodinov√° z√∫ƒçtovacia sadzba",
                workReport: "V√Ωkaz pr√°c",
                workDescription: "Vykonan√© pr√°ce",
                employeeCount: "Poƒçet pracovn√≠kov",
                workTime: "Pracovn√° doba",
                workedHours: "Odpracovan√©",
                wageCosts: "Mzdov√© n√°klady",
                hzsSum: "Suma HZS",
                startTime: "Od",
                endTime: "Do"
            },
            // V√Ωkaz pr√°c polia
            workReport: {
                datum: "D√°tum",
                identifikator: "Identifik√°tor",
                popis: "Popis",
                typVykazu: "Typ v√Ωkazu",
                cenyPocitat: "Ceny poƒç√≠ta≈•",
                cenovaPonuka: "Cenov√° ponuka",
                vydane: "Vydan√©",
                zakazka: "Z√°kazka",
                praceHZS: "Pr√°ce HZS",
                info: "info",
                totalHours: "Celkov√© hodiny",
                hzsSum: "Suma HZS",
                hzsCount: "Poƒçet z√°znamov"
            },
            // Zamestnanci polia
            employee: {
                nick: "Nick",
                firstName: "Meno",
                lastName: "Priezvisko",
                fullName: "Cel√© meno",
                status: "Status",
                phone: "Telef√≥n",
                email: "Email",
                position: "Poz√≠cia",
                department: "Oddelenie",
                telegramId: "Telegram ID",
                address: "Adresa",
                birthDate: "D√°tum narodenia",
                startDate: "D√°tum n√°stupu",
                telegramID: "Telegram ID"
            },
            
            // Sadzby zamestnancov polia
            wages: {
                employee: "Zamestnanec",
                hourlyRate: "Sadzba",
                validFrom: "Platnos≈• od",
                validTo: "Platnos≈• do",
                rateType: "Typ sadzby",
                note: "Pozn√°mka"
            },
            
            // ASISTANTO Defaults polia
            defaults: {
                date: "D√°tum",
                companyName: "N√°zov firmy",
                street: "Ulica",
                postalCode: "PSƒå",
                city: "Mesto",
                ico: "IƒåO",
                dic: "DIƒå",
                icDph: "Iƒå DPH",
                accountingYear: "√öƒçtovn√Ω rok",
                workTimeFrom: "Pracovn√Ω ƒças od",
                workTimeTo: "Pracovn√Ω ƒças do",
                defaultHzs: "Predvolen√° HZS",
                
                // Telegram nastavenia
                telegramEnabled: "Povoli≈• Telegram spr√°vy",
                telegramApiKey: "Telegram Bot API Key",
                telegramBotName: "Telegram Bot",
                telegramDefaultGroup: "Predvolen√° Telegram skupina",
                telegramAttendanceId: "Telegram Doch√°dzka ID",
                telegramGroupId: "Telegram Skupina ID",
                
                // Notifikaƒçn√© nastavenia
                notificationDelay: "Oneskorenie notifik√°cie (min)",
                summaryDelay: "Oneskorenie s√∫hrnu (min)",
                includeStats: "Zahrn√∫≈• ≈°tatistiky",
                includeFinancials: "Zahrn√∫≈• finanƒçn√© √∫daje",
                weekendMessages: "V√≠kendov√© spr√°vy",
                individualNotifications: "Notifik√°cie individu√°lne",
                groupNotifications: "Notifik√°cie skupinov√©",
                attendanceIndividualNotifications: "Doch√°dzka individu√°lne notifik√°cie",
                attendanceGroupNotifications: "Doch√°dzka skupinov√© notifik√°cie",
                
                // Debug nastavenia
                debugMode: "Debug m√≥d"
            },
            
            // Notifications polia
            notifications: {
                status: "Status",
                priority: "Priorita",
                messageType: "Typ spr√°vy",
                messageSource: "Zdroj spr√°vy",
                formatting: "Form√°tovanie",
                recipient: "Adres√°t",
                groupOrTopic: "Skupina/T√©ma",
                employeeOrClient: "Zamestnanec/klient",
                customer: "Z√°kazka",
                message: "Spr√°va",
                attachment: "Pr√≠loha",
                chatId: "Chat ID",
                threadId: "Thread ID",
                messageId: "Message ID",
                lastMessage: "Posledn√° spr√°va",
                lastUpdate: "Posledn√° aktualiz√°cia",
                messageCount: "Poƒçet spr√°v",
                retryCount: "Retry Count",
                lastError: "Posledn√° chyba"
            },
            
            // Telegram Groups polia
            telegramGroups: {
                groupName: "N√°zov skupiny",
                groupType: "Typ skupiny",
                chatId: "Chat ID",
                hasTopic: "M√° t√©mu",
                threadId: "Thread ID",
                topicName: "N√°zov t√©my",
                description: "Popis skupiny",
                enableNotifications: "Povoli≈• notifik√°cie",
                workTimeFrom: "Pracovn√Ω ƒças od",
                workTimeTo: "Pracovn√Ω ƒças do",
                weekendEnabled: "V√≠kend povolen√Ω",
                messagePriority: "Priorita spr√°v",
                dailyMessageLimit: "Denn√Ω limit spr√°v",
                silentMessage: "Tich√° spr√°va",
                lastMessage: "Posledn√° spr√°va",
                messageCount: "Poƒçet spr√°v",
                totalMessageCount: "Celkov√Ω poƒçet spr√°v",
                lastError: "Posledn√° chyba"
            },
            
            // Z√°v√§zky polia
            obligations: {
                number: "ƒå√≠slo", // TODO: automatick√© generovanie
                date: "D√°tum",
                type: "Typ", // SingleChoice: N√°kup materi√°lu, Mzda, Podiely, P√¥≈æiƒçka, Poistn√©, Fakt√∫ra
                state: "Stav", // SingleChoice: Neuhraden√©, ƒåiastoƒçne uhraden√©, Uhraden√©
                creditor: "Veriteƒæ", //SingleChoice list: Dod√°vateƒæ, Partner, Zamestnanec, Klient
                employee: "Zamestnanec", //linktToEntry Zamestnanci
                supplier: "Dod√°vateƒæ", //linktToEntry Zamestnanci
                client: "Klient", //linktToEntry Klienti
                partner: "Partner", //linktToEntry Partneri
                attendance: "Doch√°dzka", //linktToEntry Doch√°dzka
                invoices: "Fakt√∫ry prijat√©", //linktToEntry Fakt√∫ry prijat√©
                description: "Popis",
                isVat: "s DPH", // Checkbox
                vatRateOption: "sadzba dph", // Options: Z√°kladn√°, Zn√≠≈æen√°, Nulov√°
                vatRate: "sadzba DPH",
                amount: "Suma",
                vatAmount: "DPH",
                totalAmount: "Suma s DPH",
                paid: "Zaplaten√©",
                balance: "Zostatok", // amount || totalAmount - paid
                info: "info √∫hrada"
            },
            
            // Z√°kazky polia
            customers: {
                state: "Stav",
                paymentState: "Stav platby",
                workType: "Typ pr√°ce (v√Ωber)",
                hourlyRateSetting: "Nastavenie hodinovka",
                priceCalculation: "Poƒç√≠tanie cien",
                materialPriceCalc: "Poƒç√≠tanie cien Materi√°lu",
                workPriceCalc: "Poƒç√≠tanie cien Pr√°c",
                transportPriceCalc: "Poƒç√≠tanie cien Dopravy",
                priceOffer: "Cenov√° ponuka"
            },
            
            // Kniha j√°zd polia
            bookOfRides: {
                date: "D√°tum",
                rideType: "Typ jazdy",
                ridePurpose: "√öƒçel jazdy",
                rideDescription: "Popis jazdy",
                vehicle: "Vozidlo",
                driver: "≈†of√©r",
                crew: "Pos√°dka",
                customers: "Z√°kazky",
                km: "Km",
                wageCosts: "Mzdov√© n√°klady",
                rideTime: "ƒåas jazdy",
                stopTime: "ƒåas na zast√°vkach",
                totalTime: "Celkov√Ω ƒças",
                start: "≈†tart",
                destination: "Cieƒæ",
                stops: "Zast√°vky"
            },
            
            // Poklad≈àa polia
            cashRegister: {
                date: "D√°tum",
                movement: "Pohyb",
                fromCashRegister: "Z pokladne",
                toCashRegister: "Do pokladne",
                obligationPayment: "√öhrada z√°v√§zku",
                obligationType: "Typ z√°v√§zku",
                offsetClaim: "Zapoƒç√≠ta≈• pohƒæad√°vku",
                fromOverpaymentCreate: "Z preplatku vytvori≈•",
                obligations: "Z√°v√§zky",
                claims: "Pohƒæad√°vky",
                transferPurpose: "√öƒçel prevodu/v√Ωdaja",
                recordToCustomer: "Evidova≈• na z√°kazku",
                customer: "Z√°kazka",
                financialFees: "Finanƒçn√© poplatky",
                employee: "Zamestnanec",
                supplier: "Dod√°vateƒæ",
                machineOrVehicle: "Stroj/Vozidlo"
            }
        },
        
        // === ATRIB√öTY ===
        attributes: {
            // Zamestnanci atrib√∫ty (v Doch√°dzke a Z√°zname pr√°ce)
            employees: {
                workedHours: "odpracovan√©",
                hourlyRate: "hodinovka",
                costs: "n√°klady",
                bonus: "+pr√≠platok (‚Ç¨/h)",
                premium: "+pr√©mia (‚Ç¨)",
                penalty: "-pokuta (‚Ç¨)",
                dailyWage: "denn√° mzda",
                note: "pozn√°mka"
            },
            // V MementoConfig7.js - attributes sekcii pridaj:
            workRecordEmployees: {
                workedHours: "odpracovan√©",
                hourlyRate: "hodinovka", 
                wageCosts: "mzdov√© n√°klady"
            },
            workReport: {
                workDescription: "vykonan√© pr√°ce",
                hoursCount: "poƒçet hod√≠n",
                billedRate: "√∫ƒçtovan√° sadzba",
                totalPrice: "cena celkom"
            },
                        
            // HZS atrib√∫ty
            hzs: {
                price: "cena"
            },
            
            // Pos√°dka atrib√∫ty (v Knihe j√°zd)
            crew: {
                hourlyRate: "hodinovka",
                bonus: "pr√≠platok"
            },
            
            // Zast√°vky atrib√∫ty (v Knihe j√°zd)
            stops: {
                km: "km",
                duration: "trvanie",
                delay: "zdr≈æanie",
                crew: "pos√°dka"
            }
        },
        
        // === KON≈†TANTY ===
        constants: {
            // Typy doch√°dzky
            attendanceTypes: {
                work: "Pr√°ca",
                holiday: "Sviatok",
                vacation: "Dovolenka",
                sick: "PN",
                doctor: "Lek√°r",
                office: "√örad"
            },
            
            // Stavov√© hodnoty
            status: {
                active: "Akt√≠vny",
                inactive: "Neakt√≠vny",
                pending: "ƒåak√°",
                completed: "Dokonƒçen√©",
                error: "Chyba",
                sent: "Odoslan√©",
                failed: "Zlyhalo"
            },
            
            // View typy
            viewTypes: {
                print: "Tlaƒç",
                edit: "Edit√°cia",
                debug: "Debug"
            },
            
            // Stavy z√°v√§zkov
            obligationStates: {
                unpaid: "Neuhraden√©",
                partiallyPaid: "ƒåiastoƒçne uhraden√©",
                paid: "Uhraden√©"
            },
            
            // Typy spr√°v
            messageTypes: {
                attendance: "Doch√°dzka",
                workRecord: "Z√°znam pr√°c",
                bookOfRides: "Kniha j√°zd",
                todo: "ToDo",
                manual: "Manu√°lna",
                reminder: "Pripomienka",
                summary: "S√∫hrn"
            },
            
            // Priority
            priorities: {
                low: "N√≠zka",
                normal: "Norm√°lna",
                high: "Vysok√°",
                urgent: "Urgentn√©"
            },
            
            // Typ jazdy
            rideTypes: {
                business: "Firemn√°",
                private: "S√∫kromn√°",
                other: "In√°"
            },
            
            // √öƒçel jazdy
            ridePurposes: {
                work: "Pracovn√°",
                consultations: "Konzult√°cie",
                unspecified: "Neurƒçen√©"
            },
            
            // Typ pohybu v pokladni
            cashMovementTypes: {
                income: "Pr√≠jem",
                expense: "V√Ωdavok",
                transfer: "PP"
            },
            
            // Typ z√°v√§zku
            obligationTypes: {
                wages: "Mzdy",
                invoices: "Fakt√∫ry",
                rent: "N√°jomn√©",
                leasing: "Leasing"
            },
            
            // Form√°tovanie spr√°v
            messageFormatting: {
                text: "Text",
                markdown: "Markdown",
                html: "HTML"
            },
            
            // Zdroj spr√°vy
            messageSources: {
                automatic: "Automatick√°",
                manual: "Manu√°lna",
                scheduled: "Napl√°novan√°"
            },
            
            // Typ adres√°ta
            recipientTypes: {
                employee: "Zamestnanec",
                client: "Klient",
                partner: "Partner",
                group: "Skupina",
                customer: "Z√°kazka"
            },
            
            // Typ Telegram skupiny
            telegramGroupTypes: {
                general: "V≈°eobecn√°",
                customer: "Z√°kazka",
                hr: "HR",
                individual: "Individu√°lne"
            }
        },
        
        // === EMOJI A IKONY ===
        icons: {
            // V≈°eobecn√©
            start: "üöÄ",
            success: "‚úÖ",
            error: "‚ùå",
            warning: "‚ö†Ô∏è",
            info: "‚ÑπÔ∏è",
            debug: "üêõ",
            
            // Akcie
            create: "‚ûï",
            update: "üîÑ",
            delete: "üóëÔ∏è",
            search: "üîç",
            save: "üíæ",
            
            // Objekty
            person: "üë§",
            group: "üë•",
            money: "üí∞",
            rate: "üí∂",
            time: "‚è∞",
            calendar: "üìÖ",
            document: "üìÑ",
            
            // Stavy
            checkmark: "‚òëÔ∏è",
            cross: "‚ùé",
            questionMark: "‚ùì",
            exclamation: "‚ùó",
            round: "üîÑ",
            
            // ≈†pecifick√©
            attendance: "üìã",
            work: "üî®",
            car: "üöó",
            notification: "üîî",
            telegram: "üì±",
            validation: "üõ°Ô∏è",
            calculation: "üßÆ",
            note: "üìù",


        }
    };
    
    // === POMOCN√â FUNKCIE ===
    
    /**
     * Z√≠ska hodnotu z vnorenej ≈°trukt√∫ry pomocou cesty
     * @param {string} path - Cesta k hodnote (napr. "fields.attendance.date")
     * @param {*} defaultValue - Predvolen√° hodnota ak cesta neexistuje
     * @returns {*} Hodnota alebo defaultValue
     */
    function getByPath(path, defaultValue) {
        try {
            var parts = path.split('.');
            var value = CONFIG;
            
            for (var i = 0; i < parts.length; i++) {
                value = value[parts[i]];
                if (value === undefined) {
                    return defaultValue !== undefined ? defaultValue : null;
                }
            }
            
            return value;
        } catch (e) {
            return defaultValue !== undefined ? defaultValue : null;
        }
    }
    
    /**
     * Z√≠ska cel√∫ sekciu konfigur√°cie
     * @param {string} section - N√°zov sekcie (napr. "fields", "libraries")
     * @returns {Object} Sekcia alebo pr√°zdny objekt
     */
    function getSection(section) {
        return CONFIG[section] || {};
    }
    
    // === PUBLIC API ===
    return {
        version: CONFIG.version,
        
        // Priamy pr√≠stup k cel√©mu CONFIGu
        getConfig: function() {
            return CONFIG;
        },
        
        // Pr√≠stup cez cestu
        get: function(path, defaultValue) {
            return getByPath(path, defaultValue);
        },
        
        // Z√≠skanie celej sekcie
        getSection: function(section) {
            return getSection(section);
        },
        
        // ≈†pecifick√© gettery pre najƒçastej≈°ie pou≈æitie
        getLibrary: function(name) {
            return CONFIG.libraries[name] || null;
        },
        
        getField: function(category, field) {
            if (CONFIG.fields[category]) {
                return CONFIG.fields[category][field] || null;
            }
            return null;
        },
        
        getCommonField: function(field) {
            return CONFIG.fields.common[field] || null;
        },
        
        getAttribute: function(category, attr) {
            if (CONFIG.attributes[category]) {
                return CONFIG.attributes[category][attr] || null;
            }
            return null;
        },
        
        getConstant: function(category, key) {
            if (CONFIG.constants[category]) {
                return CONFIG.constants[category][key] || null;
            }
            return null;
        },
        
        getIcon: function(name) {
            return CONFIG.icons[name] || "";
        },
        
        // Utility funkcie
        getGlobalSetting: function(key) {
            return CONFIG.global[key] || null;
        },
        
        // ≈†peci√°lne gettery pre ƒçasto pou≈æ√≠van√© kombin√°cie
        getAttendanceField: function(field) {
            return CONFIG.fields.attendance[field] || null;
        },
        
        getWorkRecordField: function(field) {
            return CONFIG.fields.workRecord[field] || null;
        },
        
        getEmployeeAttribute: function(attr) {
            return CONFIG.attributes.employees[attr] || null;
        },
        
        // Debug info
        getAllLibraries: function() {
            return Object.keys(CONFIG.libraries);
        },
        
        getAllFields: function(category) {
            return category ? Object.keys(CONFIG.fields[category] || {}) : Object.keys(CONFIG.fields);
        },
        
        // Kontrola existencie
        hasLibrary: function(name) {
            return CONFIG.libraries.hasOwnProperty(name);
        },
        
        hasField: function(category, field) {
            return CONFIG.fields[category] && CONFIG.fields[category].hasOwnProperty(field);
        }
    };
})();