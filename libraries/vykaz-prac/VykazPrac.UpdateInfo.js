// ==============================================
// MEMENTO DATABASE - V√ùKAZ PR√ÅC UPDATE INFO
// Verzia: 1.0.0 | D√°tum: okt√≥ber 2025 | Autor: ASISTANTO
// Kni≈ænica: V√Ωkaz pr√°c | Trigger: Manual (Button)
// ==============================================
// √öƒçel: Regeneruje info pole s prehƒæadnou ≈°trukt√∫rou
// ==============================================

// ==============================================
// INICIALIZ√ÅCIA
// ==============================================

var utils = MementoUtils;
var config = utils.getConfig();
var centralConfig = utils.config;
var currentEntry = entry();

var CONFIG = {
    scriptName: "V√Ωkaz pr√°c Update Info",
    version: "1.0.0",

    // Referencie na centr√°lny config
    fields: {
        workReport: centralConfig.fields.workReport,
        workRecord: centralConfig.fields.workRecord,
        workPrices: centralConfig.fields.workPrices
    },
    attributes: {
        workReport: centralConfig.attributes.workReport,
        workReportWorkItems: centralConfig.attributes.workReportWorkItems
    },
    icons: centralConfig.icons
};

// ==============================================
// HLAVN√Å FUNKCIA
// ==============================================

function main() {
    try {
        utils.addDebug(currentEntry, utils.getIcon("start") + " === ≈†TART " + CONFIG.scriptName + " v" + CONFIG.version + " ===");
        utils.clearLogs(currentEntry, true);

        // Vygeneruj nov√© info
        var newInfo = generateWorkReportInfo();

        // Ulo≈æ do poƒæa info
        utils.safeSet(currentEntry, CONFIG.fields.workReport.info, newInfo);

        utils.addDebug(currentEntry, utils.getIcon("success") + " Info pole bolo √∫spe≈°ne aktualizovan√©");
        message("‚úÖ Info pole bolo aktualizovan√©");

        return true;

    } catch (error) {
        utils.addError(currentEntry, error.toString(), "main", error);
        message("‚ùå Chyba: " + error.toString());
        return false;
    }
}

// ==============================================
// GENEROVANIE INFO Z√ÅZNAMU
// ==============================================

function generateWorkReportInfo() {
    try {
        // Z√≠skaj v≈°etky z√°znamy pr√°c z v√Ωkazu
        var workRecords = utils.safeGetLinks(currentEntry, CONFIG.fields.workReport.workRecords) || [];
        var workItems = utils.safeGetLinks(currentEntry, CONFIG.fields.workReport.workItems) || [];

        var info = "# üìã V√ùKAZ PR√ÅC\n\n";

        var totalHours = 0;
        var totalHzsSum = 0;
        var totalItemsSum = 0;

        // Sekcia Hodinovka (HZS)
        if (workRecords.length > 0) {
            info += "## ‚è±Ô∏è HODINOVKA\n\n";

            // Tabuƒæka - hlaviƒçka
            info += "| # | D√°tum | Hodiny | Sadzba | Cena |\n";
            info += "|---|--------|--------|--------|--------|\n";

            // Z√≠skaj atrib√∫ty cez field()
            var workRecordsWithAttrs = currentEntry.field(CONFIG.fields.workReport.workRecords);

            for (var i = 0; i < workRecords.length; i++) {
                var record = workRecords[i];
                var recordWithAttrs = workRecordsWithAttrs[i];

                var recordDate = utils.safeGet(record, CONFIG.fields.workRecord.date);
                var dateFormatted = utils.formatDate(recordDate, "DD.MM.YYYY");

                var hours = parseFloat(recordWithAttrs.attr(CONFIG.attributes.workReport.hoursCount)) || 0;
                var rate = parseFloat(recordWithAttrs.attr(CONFIG.attributes.workReport.billedRate)) || 0;
                var price = parseFloat(recordWithAttrs.attr(CONFIG.attributes.workReport.totalPrice)) || 0;

                totalHours += hours;
                totalHzsSum += price;

                // Riadok tabuƒæky
                info += "| " + (i + 1) + " | ";
                info += dateFormatted + " | ";
                info += hours.toFixed(2) + " h | ";
                info += rate.toFixed(2) + " ‚Ç¨/h | ";
                info += "**" + price.toFixed(2) + " ‚Ç¨** |\n";
            }

            info += "\n**üìä S√∫hrn Hodinovka:**\n";
            info += "- Celkov√© hodiny: **" + totalHours.toFixed(2) + " h**\n";
            info += "- Celkov√° suma: **" + totalHzsSum.toFixed(2) + " ‚Ç¨**\n\n";
        }

        // Sekcia Polo≈æky
        if (workItems.length > 0) {
            info += "## üìã POLO≈ΩKY\n\n";

            // Tabuƒæka - hlaviƒçka
            info += "| # | N√°zov | Mno≈æstvo | MJ | Cena | Cena celkom |\n";
            info += "|---|-------|----------|----|----- |-------------|\n";

            // Z√≠skaj atrib√∫ty cez field()
            var workItemsWithAttrs = currentEntry.field(CONFIG.fields.workReport.workItems);

            for (var i = 0; i < workItems.length; i++) {
                var item = workItems[i];
                var itemWithAttrs = workItemsWithAttrs[i];

                // Z√≠skaj n√°zov polo≈æky z linknut√©ho z√°znamu (pole "N√°zov")
                var itemName = utils.safeGet(item, "N√°zov", "Nezn√°ma polo≈æka");

                // Z√≠skaj mern√∫ jednotku z linknut√©ho z√°znamu cenn√≠ka (pole "MJ")
                var mjLinks = utils.safeGetLinks(item, "MJ") || [];
                var mj = "ks";
                if (mjLinks.length > 0) {
                    mj = utils.safeGet(mjLinks[0], "N√°zov", "ks");
                }

                var quantity = parseFloat(itemWithAttrs.attr(CONFIG.attributes.workReportWorkItems.quantity)) || 0;
                var price = parseFloat(itemWithAttrs.attr(CONFIG.attributes.workReportWorkItems.price)) || 0;
                var total = parseFloat(itemWithAttrs.attr(CONFIG.attributes.workReportWorkItems.totalPrice)) || 0;

                totalItemsSum += total;

                // Riadok tabuƒæky
                info += "| " + (i + 1) + " | ";
                info += itemName + " | ";
                info += quantity.toFixed(2) + " | ";
                info += mj + " | ";
                info += price.toFixed(2) + " ‚Ç¨ | ";
                info += "**" + total.toFixed(2) + " ‚Ç¨** |\n";
            }

            info += "\n**üìä S√∫hrn Polo≈æky:**\n";
            info += "- Celkov√° suma: **" + totalItemsSum.toFixed(2) + " ‚Ç¨**\n\n";
        }

        // Celkov√Ω s√∫hrn - porovnanie
        if (workRecords.length > 0 && workItems.length > 0) {
            info += "## üí∞ POROVNANIE √öƒåTOVANIA\n\n";

            var difference = totalItemsSum - totalHzsSum;
            var percentDiff = totalHzsSum > 0 ? (difference / totalHzsSum * 100) : 0;

            info += "| Typ √∫ƒçtovania | Suma | Pozn√°mka |\n";
            info += "|---------------|------|----------|\n";
            info += "| ‚è±Ô∏è Hodinovka | " + totalHzsSum.toFixed(2) + " ‚Ç¨ | |\n";
            info += "| üìã Polo≈æky | " + totalItemsSum.toFixed(2) + " ‚Ç¨ | |\n";
            info += "| **Rozdiel** | **" + Math.abs(difference).toFixed(2) + " ‚Ç¨** | ";

            if (difference > 0) {
                info += "‚úÖ Polo≈æky v√Ωhodnej≈°ie o " + percentDiff.toFixed(1) + "% |\n";
            } else if (difference < 0) {
                info += "‚ö†Ô∏è Hodinovka v√Ωhodnej≈°ia o " + Math.abs(percentDiff).toFixed(1) + "% |\n";
            } else {
                info += "‚öñÔ∏è Rovnak√© |\n";
            }

            info += "\n";

        } else if (workRecords.length > 0 || workItems.length > 0) {
            // Iba jeden typ √∫ƒçtovania
            var grandTotal = totalHzsSum + totalItemsSum;
            info += "## üí∞ CELKOV√Å SUMA\n";
            info += "**" + grandTotal.toFixed(2) + " ‚Ç¨**\n\n";
        }

        // Ak nie s√∫ ≈æiadne d√°ta
        if (workRecords.length === 0 && workItems.length === 0) {
            info += "_Tento v√Ωkaz zatiaƒæ neobsahuje ≈æiadne z√°znamy pr√°c ani polo≈æky._\n\n";
        }

        // Metainfo
        info += "---\n";
        info += "*Vygenerovan√©: " + moment().format("DD.MM.YYYY HH:mm") + "*\n";
        info += "*Script: " + CONFIG.scriptName + " v" + CONFIG.version + "*";

        return info;

    } catch (error) {
        utils.addError(currentEntry, "Chyba pri generovan√≠ info: " + error.toString(), "generateWorkReportInfo", error);
        return "Chyba pri generovan√≠ info z√°znamu: " + error.toString();
    }
}

// ==============================================
// SPUSTENIE
// ==============================================

main();
