// ==============================================
// MEMENTO DATABASE - DOCH√ÅDZKA UPDATE TRIGGER
// Verzia: 1.0.0 | D√°tum: okt√≥ber 2025 | Autor: ASISTANTO
// Kni≈ænica: Doch√°dzka | Trigger: After Save
// ==============================================
// ‚úÖ FUNKCIONALITA v1.0.0:
//    - Po ulo≈æen√≠ z√°znamu Doch√°dzky aktualizuje v≈°etky linknut√© Denn√© reporty
//    - Spust√≠ prepoƒçet v Dennom reporte, aby sa aktualizovali info polia
// ==============================================

var utils = MementoUtils7;
var CONFIG = utils.getConfig();

try {
    utils.addDebug(entry, "üîÑ Sp√∫≈°≈•am aktualiz√°ciu Denn√Ωch reportov po zmene Doch√°dzky");

    // Z√≠skaj v≈°etky linknut√© Denn√© reporty
    var dailyReports = utils.safeGetLinks(entry, CONFIG.fields.attendance.dailyReport);

    if (!dailyReports || dailyReports.length === 0) {
        utils.addDebug(entry, "  ‚ÑπÔ∏è ≈Ωiadne linknut√© Denn√© reporty");
        return;
    }

    utils.addDebug(entry, "  üìä Poƒçet linknut√Ωch Denn√Ωch reportov: " + dailyReports.length);

    // Pre ka≈æd√Ω Denn√Ω report spusti aktualiz√°ciu
    for (var i = 0; i < dailyReports.length; i++) {
        var dailyReport = dailyReports[i];
        var reportId = dailyReport.field("ID");
        var reportDate = utils.formatDate(utils.safeGet(dailyReport, CONFIG.fields.dailyReport.date));

        try {
            // Trigger sa spust√≠ automaticky pri ulo≈æen√≠
            dailyReport.set(CONFIG.fields.common.modifiedDate, new Date());

            utils.addDebug(entry, "  ‚úÖ Aktualizovan√Ω Denn√Ω report #" + reportId + " (" + reportDate + ")");
        } catch (error) {
            utils.addError(entry, "Chyba pri aktualiz√°cii Denn√©ho reportu #" + reportId + ": " + error.toString(), "updateDailyReport", error);
        }
    }

    utils.addDebug(entry, "‚úÖ Dokonƒçen√° aktualiz√°cia " + dailyReports.length + " Denn√Ωch reportov");

} catch (error) {
    utils.addError(entry, "Chyba v Doch.Update.DailyReport trigger: " + error.toString(), "AfterSave", error);
}
