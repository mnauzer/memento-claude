// ==============================================
// MEMENTO DATABASE - MATERI√ÅL PREPOƒåET CENY BUTTON
// Verzia: 1.0 | D√°tum: September 2025 | Autor: ASISTANTO
// Kni≈ænica: Materi√°l | Trigger: Button Script
// ==============================================
// üìã FUNKCIA:
//    - Prepoƒçet cien materi√°lu priamo z button v z√°zname
//    - Pou≈æ√≠va hodnoty priamo z pol√≠ materi√°lu (bez argumentov)
//    - Automatick√Ω prepoƒçet predajn√Ωch cien podƒæa nastaven√≠
//    - Aktualiz√°cia ikon podƒæa zmeny ceny
//    - Automatick√© vytvorenie/aktualiz√°cia cenovej hist√≥rie
// ==============================================
// üîß POU≈Ω√çVA:
//    - MementoUtils v7.0 (agreg√°tor)
//    - MementoConfig (centr√°lna konfigur√°cia)
//    - MementoBusiness (business logika pre ceny materi√°lu)
//    - MementoCore (dial√≥gy, logging)
// üìù VSTUPN√â HODNOTY (z pol√≠ z√°znamu):
//    - "N√°kupn√° cena" - N√°kupn√° cena materi√°lu bez DPH
//    - "Prepoƒçet ceny" - Sp√¥sob prepoƒçtu (Pevn√° cena/Podƒæa prir√°≈æky/Neprepoƒç√≠tava≈•)
//    - "Obchodn√° prir√°≈æka" - Percentu√°lna prir√°≈æka
//    - Ostatn√© nastavenia zaokr√∫hƒæovania a DPH
// ==============================================

// ==============================================
// INICIALIZ√ÅCIA
// ==============================================

var utils = MementoUtils;
var config = utils.getConfig();
var centralConfig = utils.config;
var currentEntry = entry();

var CONFIG = {
    scriptName: "Materi√°l Prepoƒçet ceny Button",
    version: "1.0.0",

    // Kni≈ænice
    libraries: {
        inventory: (centralConfig.libraries && centralConfig.libraries.inventory) || "Materi√°l",
        vatRates: (centralConfig.libraries && centralConfig.libraries.vatRatesLib) || "sadzby DPH"
    },

    // Polia Materi√°l
    materialFields: {
        name: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.name) || "N√°zov",
        purchasePrice: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.purchasePrice) || "N√°kupn√° cena",
        purchasePriceWithVat: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.purchasePriceWithVat) || "N√°kupn√° cena s DPH",
        price: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.price) || "Cena",
        priceWithVat: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.priceWithVat) || "Cena s DPH",
        priceCalculation: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.priceCalculation) || "Prepoƒçet ceny",
        markupPercentage: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.markupPercentage) || "Obchodn√° prir√°≈æka",
        priceRounding: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.priceRounding) || "Zaokr√∫hƒæovanie cien",
        roundingValue: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.roundingValue) || "Hodnota zaokr√∫henia",
        vatRate: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.vatRate) || "sadzba DPH",
        purchasePriceChange: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.purchasePriceChange) || "Zmena n√°kupnej ceny",
        changePercentage: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.changePercentage) || "Percento zmeny",
        icons: (centralConfig.fields && centralConfig.fields.items && centralConfig.fields.items.icons) || "icons",

        // Spoloƒçn√© polia
        debugLog: (centralConfig.fields && centralConfig.fields.common && centralConfig.fields.common.debugLog) || "Debug_Log",
        errorLog: (centralConfig.fields && centralConfig.fields.common && centralConfig.fields.common.errorLog) || "Error_Log",
        info: (centralConfig.fields && centralConfig.fields.common && centralConfig.fields.common.info) || "info"
    },

    // Ikony
    icons: (centralConfig.icons) || {
        start: "üöÄ",
        success: "‚úÖ",
        error: "‚ùå",
        warning: "‚ö†Ô∏è",
        info: "‚ÑπÔ∏è",
        money: "üí∞",
        calculation: "üßÆ",
        material: "üì¶"
    }
};

// ==============================================
// HLAVN√Å FUNKCIA
// ==============================================

function main() {
    try {
        utils.clearLogs(currentEntry, [CONFIG.materialFields.debugLog, CONFIG.materialFields.errorLog]);
        utils.addDebug(currentEntry, CONFIG.icons.start + " === ≈†TART " + CONFIG.scriptName + " v" + CONFIG.version + " ===");

        // Z√≠skanie n√°zvu materi√°lu
        var materialName = utils.safeGet(currentEntry, CONFIG.materialFields.name, "Nezn√°my materi√°l");
        utils.addDebug(currentEntry, CONFIG.icons.material + " Materi√°l: " + materialName);

        // Naƒç√≠tanie vstupn√Ωch hodn√¥t z pol√≠ z√°znamu
        var inputData = loadInputDataFromRecord();
        if (!inputData.isValid) {
            utils.showErrorDialog("‚ùå CHYBA VSTUPN√ùCH √öDAJOV\n\n" + inputData.errorMessage);
            return false;
        }

        utils.addDebug(currentEntry, CONFIG.icons.info + " Vstupn√© √∫daje √∫spe≈°ne naƒç√≠tan√©");
        utils.addDebug(currentEntry, "  ‚Ä¢ N√°kupn√° cena: " + utils.formatMoney(inputData.purchasePrice));
        utils.addDebug(currentEntry, "  ‚Ä¢ Prepoƒçet ceny: " + inputData.priceCalculation);

        // Vykonanie prepoƒçtu
        executeCalculation(inputData.purchasePrice, materialName);

        return true;

    } catch (error) {
        utils.addError(currentEntry, "Kritick√° chyba v hlavnej funkcii", "main", error);
        utils.showErrorDialog("Kritick√° chyba!\n\n" + error.toString());
        return false;
    }
}

// ==============================================
// NAƒå√çTANIE VSTUPN√ùCH √öDAJOV
// ==============================================

/**
 * Naƒç√≠ta vstupn√© √∫daje priamo z pol√≠ z√°znamu
 */
function loadInputDataFromRecord() {
    try {
        var inputData = {
            purchasePrice: 0,
            priceCalculation: "",
            isValid: true,
            errorMessage: ""
        };

        // Naƒç√≠tanie n√°kupnej ceny
        var purchasePriceValue = utils.safeGet(currentEntry, CONFIG.materialFields.purchasePrice, 0);
        inputData.purchasePrice = parseFloat(purchasePriceValue) || 0;

        // Naƒç√≠tanie sp√¥sobu prepoƒçtu
        inputData.priceCalculation = utils.safeGet(currentEntry, CONFIG.materialFields.priceCalculation, "").trim();

        // Valid√°cia n√°kupnej ceny
        if (inputData.purchasePrice <= 0) {
            inputData.isValid = false;
            inputData.errorMessage = "N√°kupn√° cena nie je nastaven√° alebo je nulov√°!\n\nNastavte n√°kupn√∫ cenu materi√°lu v poli '" + CONFIG.materialFields.purchasePrice + "'.";
            return inputData;
        }

        // Valid√°cia sp√¥sobu prepoƒçtu
        if (!inputData.priceCalculation || inputData.priceCalculation === "") {
            inputData.isValid = false;
            inputData.errorMessage = "Sp√¥sob prepoƒçtu nie je nastaven√Ω!\n\nNastavte hodnotu v poli '" + CONFIG.materialFields.priceCalculation + "'.";
            return inputData;
        }

        // Pre "Podƒæa prir√°≈æky" kontrola obchodnej prir√°≈æky
        if (inputData.priceCalculation === "Podƒæa prir√°≈æky") {
            var markupPercentage = parseFloat(utils.safeGet(currentEntry, CONFIG.materialFields.markupPercentage, 0));
            if (markupPercentage <= 0) {
                inputData.isValid = false;
                inputData.errorMessage = "Pre prepoƒçet 'Podƒæa prir√°≈æky' nie je nastaven√° obchodn√° prir√°≈æka!\n\nNastavte hodnotu v poli '" + CONFIG.materialFields.markupPercentage + "'.";
                return inputData;
            }
            utils.addDebug(currentEntry, CONFIG.icons.info + " Obchodn√° prir√°≈æka: " + markupPercentage + "%");
        }

        utils.addDebug(currentEntry, CONFIG.icons.success + " Vstupn√© √∫daje validovan√©");
        return inputData;

    } catch (error) {
        utils.addError(currentEntry, "Chyba pri naƒç√≠tavan√≠ vstupn√Ωch √∫dajov", "loadInputDataFromRecord", error);
        return {
            isValid: false,
            errorMessage: "Chyba pri spracovan√≠ vstupn√Ωch √∫dajov: " + error.toString()
        };
    }
}

// ==============================================
// VYKONANIE PREPOƒåTU
// ==============================================

/**
 * Vykon√° skutoƒçn√Ω prepoƒçet cien
 */
function executeCalculation(purchasePrice, materialName) {
    try {
        utils.addDebug(currentEntry, CONFIG.icons.calculation + " Sp√∫≈°≈•am prepoƒçet cien...");

        // Pou≈æitie funkcie z MementoBusiness modulu s vyn√∫ten√Ωm prepoƒçtom
        var result = utils.calculateAndUpdateMaterialPrices(
            currentEntry,
            purchasePrice,
            new Date(), // Pou≈æije aktu√°lny d√°tum
            true, // isManualAction = true (ide o manu√°lny prepoƒçet)
            { forceRecalculation: true } // Vyn√∫ti≈• prepoƒçet bez ohƒæadu na prahy
        );

        if (result && result.sellingPrice !== undefined) {
            // √öspe≈°n√Ω prepoƒçet
            utils.addDebug(currentEntry, CONFIG.icons.success + " Prepoƒçet cien √∫spe≈°ne dokonƒçen√Ω");

            var successMessage = "‚úÖ PREPOƒåET √öSPE≈†N√ù!\n\n";
            successMessage += "üì¶ Materi√°l: " + materialName + "\n";
            successMessage += "üí∂ N√°kupn√° cena: " + utils.formatMoney(purchasePrice) + "\n";
            successMessage += "üí∞ Predajn√° cena: " + utils.formatMoney(result.sellingPrice) + "\n";
            successMessage += "üí∞ Cena s DPH: " + utils.formatMoney(result.priceWithVat) + "\n\n";
            successMessage += "üìä V≈°etky ceny boli aktualizovan√©!";

            if (result.updated) {
                successMessage += "\n\nüìù Info z√°znam bol vytvoren√Ω s podrobnos≈•ami prepoƒçtu.";
            }

            utils.showSuccessDialog(successMessage);

        } else {
            // Prepoƒçet zlyhal
            utils.addError(currentEntry, "Prepoƒçet cien zlyhal", "executeCalculation");
            utils.addError(currentEntry, "Result object: " + JSON.stringify(result), "executeCalculation");
            utils.showErrorDialog("‚ùå CHYBA PREPOƒåTU\n\nPrepoƒçet cien sa nepodarilo dokonƒçi≈•.\n\nSkontrolujte nastavenia materi√°lu a sk√∫ste znova.");
        }

    } catch (error) {
        utils.addError(currentEntry, "Chyba pri vykon√°van√≠ prepoƒçtu", "executeCalculation", error);
        utils.showErrorDialog("Kritick√° chyba pri prepoƒçte!\n\n" + error.toString());
    }
}

// ==============================================
// VALID√ÅCIA NASTAVEN√ç MATERI√ÅLU
// ==============================================

/**
 * Skontroluje ƒçi s√∫ v≈°etky potrebn√© polia nastaven√©
 */
function validateMaterialSettings() {
    try {
        var issues = [];

        // Kontrola DPH sadzby
        var vatRate = utils.safeGet(currentEntry, CONFIG.materialFields.vatRate, "");
        if (!vatRate || vatRate.trim() === "") {
            issues.push("‚Ä¢ Nie je nastaven√° sadzba DPH");
        }

        // Kontrola prepoƒçtu ceny
        var priceCalculation = utils.safeGet(currentEntry, CONFIG.materialFields.priceCalculation, "");
        if (!priceCalculation || priceCalculation.trim() === "") {
            issues.push("‚Ä¢ Nie je nastaven√Ω sp√¥sob prepoƒçtu ceny");
        }

        // Pre "Podƒæa prir√°≈æky" kontrola obchodnej prir√°≈æky
        if (priceCalculation === "Podƒæa prir√°≈æky") {
            var markupPercentage = parseFloat(utils.safeGet(currentEntry, CONFIG.materialFields.markupPercentage, 0));
            if (markupPercentage <= 0) {
                issues.push("‚Ä¢ Nie je nastaven√° obchodn√° prir√°≈æka pre prepoƒçet 'Podƒæa prir√°≈æky'");
            }
        }

        if (issues.length > 0) {
            var warningMessage = "‚ö†Ô∏è UPOZORNENIE NA NASTAVENIA\n\n";
            warningMessage += "Niektor√© nastavenia materi√°lu m√¥≈æu ovplyvni≈• prepoƒçet:\n\n";
            warningMessage += issues.join("\n");
            warningMessage += "\n\nChcete pokraƒçova≈• v prepoƒçte?";

            // Pre button script len upozornenie, nepreru≈°ujeme
            utils.addDebug(currentEntry, CONFIG.icons.warning + " Upozornenia na nastavenia: " + issues.length);
        }

        return {
            hasIssues: issues.length > 0,
            issues: issues
        };

    } catch (error) {
        utils.addError(currentEntry, "Chyba pri valid√°cii nastaven√≠", "validateMaterialSettings", error);
        return {
            hasIssues: false,
            issues: []
        };
    }
}

// ==============================================
// SPUSTENIE SCRIPTU
// ==============================================

main();