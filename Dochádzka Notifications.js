// ==============================================
// TRIGGER SCRIPT - DOCH√ÅDZKA NOTIFIK√ÅCIE
// Verzia: 1.2 | Typ: After Save Trigger  
// Kni≈ænica: Doch√°dzka
// ==============================================
// ‚úÖ OPRAVEN√â v1.2:
//    - √öPLNE odstr√°nen√© v≈°etky return statements (aj vo funkci√°ch!)
//    - Glob√°lne premenn√© namiesto return hodn√¥t
//    - Trigger Script 100% kompatibiln√Ω s Memento Database
//    - ≈Ωiadne zak√°zan√© kon≈°trukcie
// ==============================================

var CONFIG = {
    firmaNazov: "Va≈°a firma s.r.o.",
    debug: true,
    version: "1.2",
    
    apiLibrary: "ASISTANTO API",
    maxSMSLength: 160,
    telegramParseMode: "Markdown"
};

var currentEntry = entry();

// ‚úÖ GLOB√ÅLNE PREMENN√â namiesto return hodn√¥t
var globalApiKeys = { success: false, telegramToken: null };
var globalResult = { success: false, uspesnePoslane: 0, celkovePokusy: 0 };
var globalSprava = "";

// ==============================================
// UTILITY FUNKCIE
// ==============================================

function logDebug(message) {
    if (CONFIG.debug) {
        var timestamp = moment().format("DD.MM.YY HH:mm:ss");
        var currentLog = currentEntry.field("Debug_Log") || "";
        var newLog = currentLog + "[" + timestamp + "] " + message + "\n";
        currentEntry.set("Debug_Log", newLog);
    }
}

function logError(error, location) {
    var timestamp = moment().format("DD.MM.YY HH:mm:ss");
    var errorMsg = "[" + timestamp + "] ‚ùå " + error.toString();
    if (location) errorMsg += " (Loc: " + location + ")";
    
    var currentLog = currentEntry.field("Error_Log") || "";
    currentEntry.set("Error_Log", currentLog + errorMsg + "\n");
}

function formatTime(timeValue) {
    if (!timeValue) {
        globalSprava = "N/A";
    } else {
        try {
            globalSprava = moment(timeValue).format("HH:mm");
        } catch (e) {
            globalSprava = "N/A";
        }
    }
}

function formatDate(dateValue) {
    if (!dateValue) {
        globalSprava = "N/A";
    } else {
        try {
            globalSprava = moment(dateValue).format("DD.MM.YYYY");
        } catch (e) {
            globalSprava = "N/A";
        }
    }
}

// ==============================================
// API FUNKCIE - BEZ RETURN STATEMENTS
// ==============================================

function getApiKeys() {
    // Reset glob√°lnej premennej
    globalApiKeys = { success: false, telegramToken: null };
    
    try {
        var apiLib = libByName(CONFIG.apiLibrary);
        if (!apiLib) {
            logError("API kni≈ænica nen√°jden√°: " + CONFIG.apiLibrary, "getApiKeys");
        } else {
            var apiEntries = apiLib.entries();
            if (!apiEntries || apiEntries.length === 0) {
                logError("≈Ωiadne API z√°znamy", "getApiKeys");
            } else {
                var telegramToken = apiEntries[0].field("Telegram Bot Token");
                if (telegramToken) {
                    globalApiKeys.success = true;
                    globalApiKeys.telegramToken = telegramToken;
                }
            }
        }
    } catch (error) {
        logError(error, "getApiKeys");
    }
}

function posliTelegramSpravu(chatId, sprava, botToken) {
    var success = false;
    
    try {
        logDebug("Posielam Telegram spr√°vu na Chat ID: " + chatId);
        
        // Simul√°cia - tu implementuj HTTP request
        logDebug("Telegram spr√°va pripraven√°: " + sprava.substring(0, 100) + "...");
        success = true;
        
        /*
        // Skutoƒçn√Ω HTTP request:
        var url = "https://api.telegram.org/bot" + botToken + "/sendMessage";
        var payload = JSON.stringify({
            chat_id: chatId,
            text: sprava,
            parse_mode: CONFIG.telegramParseMode
        });
        
        // Tu pou≈æij Memento HTTP API
        success = httpPost(url, payload, {"Content-Type": "application/json"}).status === 200;
        */
        
    } catch (error) {
        logError(error, "posliTelegramSpravu");
        success = false;
    }
    
    // Nastav glob√°lnu premenn√∫ namiesto return
    globalResult.success = success;
}

function posliSMS(telefon, sprava) {
    var success = false;
    
    try {
        logDebug("Posielam SMS na: " + telefon);
        
        if (sprava.length > CONFIG.maxSMSLength) {
            sprava = sprava.substring(0, CONFIG.maxSMSLength - 3) + "...";
        }
        
        // Simul√°cia
        logDebug("SMS pripraven√°: " + sprava);
        success = true;
        
        /*
        // Skutoƒçn√© volanie:
        success = sendSMS(telefon, sprava);
        */
        
    } catch (error) {
        logError(error, "posliSMS");
        success = false;
    }
    
    globalResult.success = success;
}

function posliEmail(email, predmet, sprava) {
    var success = false;
    
    try {
        logDebug("Posielam Email na: " + email);
        
        // Simul√°cia
        logDebug("Email pripraven√Ω: " + predmet);
        success = true;
        
        /*
        // Skutoƒçn√© volanie:
        success = sendEmail(email, predmet, sprava);
        */
        
    } catch (error) {
        logError(error, "posliEmail");
        success = false;
    }
    
    globalResult.success = success;
}

// ==============================================
// TEMPLATE FUNKCIE - BEZ RETURN
// ==============================================

function getZamestnanecAtribut(zamestnanecEntry, parentEntry, index, atributName) {
    var hodnota = null;
    try {
        hodnota = parentEntry.getAttr("Zamestnanci", index, atributName);
    } catch (error) {
        logDebug("Chyba pri z√≠skavan√≠ atrib√∫tu " + atributName + ": " + error);
        hodnota = null;
    }
    globalSprava = hodnota; // Namiesto return
}

function vytvorTelegramSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex) {
    var meno = zamestnanec.field("Meno") || "";
    var priezvisko = zamestnanec.field("Priezvisko") || "";
    var nick = zamestnanec.field("Nick") || "";
    
    var celeMeno = nick || (meno + " " + priezvisko).trim();
    
    // Z√°kladn√© √∫daje z doch√°dzky
    var datum = dochadzkaZaznam.field("D√°tum");
    var prichod = dochadzkaZaznam.field("Pr√≠chod");
    var odchod = dochadzkaZaznam.field("Odchod");
    var prestavka = dochadzkaZaznam.field("Prest√°vka") || 0;
    var poznamka = dochadzkaZaznam.field("Pozn√°mka");
    
    // Atrib√∫ty zamestnanca
    getZamestnanecAtribut(zamestnanec, dochadzkaZaznam, zamestnanecIndex, "odpracovan√©");
    var odpracovane = globalSprava || 0;
    
    getZamestnanecAtribut(zamestnanec, dochadzkaZaznam, zamestnanecIndex, "hodinovka");
    var hodinovka = globalSprava || 0;
    
    getZamestnanecAtribut(zamestnanec, dochadzkaZaznam, zamestnanecIndex, "mzdov√© n√°klady");
    var mzdoveNaklady = globalSprava || 0;
    
    // Projekt/Z√°kazka
    var projekt = "";
    var projektField = dochadzkaZaznam.field("Projekt/Z√°kazka");
    if (projektField && Array.isArray(projektField) && projektField.length > 0) {
        projekt = projektField[0].field("N√°zov z√°znamu") || projektField[0].field("ƒå√≠slo") || "Projekt";
    }
    
    // Vytvor rich Telegram spr√°vu
    var sprava = "üè¢ **Evidencia doch√°dzky**\n\n";
    sprava += "Dobr√Ω de≈à **" + celeMeno + "**!\n\n";
    
    sprava += "üìã **Doch√°dzka ";
    formatDate(datum);
    sprava += globalSprava + ":**\n";
    
    sprava += "üïê Pr√≠chod: **";
    formatTime(prichod);
    sprava += globalSprava + "**\n";
    
    if (odchod) {
        sprava += "üïê Odchod: **";
        formatTime(odchod);
        sprava += globalSprava + "**\n";
        sprava += "‚è±Ô∏è Odpracovan√©: **" + odpracovane + "h**\n";
        
        var nadcasy = Math.max(0, odpracovane - 8);
        if (nadcasy > 0) {
            sprava += "‚ö° Nadƒçasy: **" + nadcasy + "h**\n";
        }
    }
    
    if (prestavka > 0) {
        sprava += "‚òï Prest√°vka: " + prestavka + " min\n";
    }
    
    if (projekt) {
        sprava += "üì¶ Projekt: " + projekt + "\n";
    }
    
    sprava += "\nüí∞ **Mzdov√© √∫daje:**\n";
    sprava += "‚Ä¢ Hodinovka: " + hodinovka + " ‚Ç¨/h\n";
    sprava += "‚Ä¢ Dne≈°n√© n√°klady: **" + mzdoveNaklady + " ‚Ç¨**\n";
    
    if (poznamka) {
        sprava += "\nüìù **Pozn√°mka:** _" + poznamka + "_\n";
    }
    
    sprava += "\n---\n";
    sprava += CONFIG.firmaNazov + " | " + moment().format("DD.MM.YYYY HH:mm");
    
    globalSprava = sprava; // Namiesto return
}

function vytvorSMSSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex) {
    var nick = zamestnanec.field("Nick") || zamestnanec.field("Meno") || "Zamestnanec";
    var prichod = dochadzkaZaznam.field("Pr√≠chod");
    var odchod = dochadzkaZaznam.field("Odchod");
    
    getZamestnanecAtribut(zamestnanec, dochadzkaZaznam, zamestnanecIndex, "mzdov√© n√°klady");
    var mzdoveNaklady = globalSprava || 0;
    
    var sprava = nick + ", ";
    
    if (odchod) {
        getZamestnanecAtribut(zamestnanec, dochadzkaZaznam, zamestnanecIndex, "odpracovan√©");
        var odpracovane = globalSprava || 0;
        
        formatTime(prichod);
        var prichodStr = globalSprava;
        formatTime(odchod);
        var odchodStr = globalSprava;
        
        sprava += "doch√°dzka: " + prichodStr + "-" + odchodStr;
        sprava += " (" + odpracovane + "h)";
        if (mzdoveNaklady > 0) {
            sprava += ", n√°klady " + mzdoveNaklady + "‚Ç¨";
        }
    } else {
        formatTime(prichod);
        sprava += "pr√≠chod: " + globalSprava;
    }
    
    sprava += ". " + CONFIG.firmaNazov;
    
    globalSprava = sprava;
}

function vytvorEmailSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex) {
    vytvorTelegramSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex);
    var telegram = globalSprava;
    var email = telegram.replace(/\*\*/g, "").replace(/\*/g, "").replace(/_/g, "");
    globalSprava = email;
}

// ==============================================
// HLAVN√Å LOGIKA  
// ==============================================

function posliNotifikaciuZamestnancovi(dochadzkaZaznam, zamestnanec, zamestnanecIndex) {
    // Reset result
    globalResult = { success: false, uspesnePoslane: 0, celkovePokusy: 0 };
    
    var meno = zamestnanec.field("Nick") || zamestnanec.field("Meno") || "Zamestnanec";
    logDebug("Spracov√°vam notifik√°cie pre: " + meno);
    
    // Skontroluj master s√∫hlas
    if (!zamestnanec.field("Notifik√°cie S√∫hlas")) {
        logDebug("  ‚ùå Nem√° s√∫hlas s notifik√°ciami - preskakujem");
        // globalResult u≈æ je false
    } else {
        // TELEGRAM
        if (zamestnanec.field("Telegram Notifik√°cie")) {
            var chatId = zamestnanec.field("Telegram Chat ID");
            if (chatId && globalApiKeys.success && globalApiKeys.telegramToken) {
                globalResult.celkovePokusy++;
                vytvorTelegramSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex);
                var telegramSprava = globalSprava;
                
                posliTelegramSpravu(chatId, telegramSprava, globalApiKeys.telegramToken);
                if (globalResult.success) {
                    globalResult.uspesnePoslane++;
                    logDebug("  ‚úÖ Telegram spr√°va poslan√°");
                } else {
                    logDebug("  ‚ùå Telegram spr√°va zlyhala");
                }
            } else {
                logDebug("  ‚ö†Ô∏è Telegram zapnut√Ω ale ch√Ωba Chat ID alebo token");
            }
        }
        
        // SMS
        if (zamestnanec.field("SMS Notifik√°cie")) {
            var telefon = zamestnanec.field("Telef√≥n");
            if (telefon) {
                globalResult.celkovePokusy++;
                vytvorSMSSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex);
                var smsSprava = globalSprava;
                
                posliSMS(telefon, smsSprava);
                if (globalResult.success) {
                    globalResult.uspesnePoslane++;
                    logDebug("  ‚úÖ SMS spr√°va poslan√°");
                } else {
                    logDebug("  ‚ùå SMS spr√°va zlyhala");
                }
            } else {
                logDebug("  ‚ö†Ô∏è SMS zapnut√© ale ch√Ωba telef√≥nne ƒç√≠slo");
            }
        }
        
        // EMAIL
        if (zamestnanec.field("Email Notifik√°cie")) {
            var email = zamestnanec.field("E-mail");
            if (email) {
                globalResult.celkovePokusy++;
                vytvorEmailSpravu(dochadzkaZaznam, zamestnanec, zamestnanecIndex);
                var emailSprava = globalSprava;
                
                formatDate(dochadzkaZaznam.field("D√°tum"));
                var predmet = "Evidencia doch√°dzky - " + globalSprava;
                
                posliEmail(email, predmet, emailSprava);
                if (globalResult.success) {
                    globalResult.uspesnePoslane++;
                    logDebug("  ‚úÖ Email spr√°va poslan√°");
                } else {
                    logDebug("  ‚ùå Email spr√°va zlyhala");
                }
            } else {
                logDebug("  ‚ö†Ô∏è Email zapnut√Ω ale ch√Ωba emailov√° adresa");
            }
        }
        
        globalResult.success = globalResult.uspesnePoslane > 0;
        logDebug("  üìä V√Ωsledok pre " + meno + ": " + globalResult.uspesnePoslane + "/" + globalResult.celkovePokusy + " √∫spe≈°n√Ωch");
    }
}

// ==============================================
// MAIN TRIGGER - √öPLNE BEZ RETURN STATEMENTS
// ==============================================

try {
    logDebug("üöÄ === ≈†TART DOCH√ÅDZKA NOTIFIK√ÅCI√ç v" + CONFIG.version + " ===");
    
    var scriptFailed = false;
    
    // Z√≠skaj API keys
    getApiKeys(); // V√Ωsledok v globalApiKeys
    if (!globalApiKeys.success) {
        logError("Nie je mo≈æn√© z√≠ska≈• API keys", "MAIN");
        // Pokraƒçuj aj bez Telegram
    }
    
    // Z√≠skaj zamestnancov
    var zamestnanci = currentEntry.field("Zamestnanci") || [];
    
    if (zamestnanci.length === 0) {
        logDebug("‚ö†Ô∏è ≈Ωiadni zamestnanci v z√°zname - ukonƒçujem");
        scriptFailed = true;
    }
    
    if (!scriptFailed) {
        logDebug("üë• N√°jden√Ωch " + zamestnanci.length + " zamestnancov");
        
        var celkemUspesnych = 0;
        var celkemZamestnancov = 0;
        
        // Iteruj cez v≈°etk√Ωch zamestnancov
        for (var i = 0; i < zamestnanci.length; i++) {
            var zamestnanec = zamestnanci[i];
            
            if (zamestnanec) {
                celkemZamestnancov++;
                posliNotifikaciuZamestnancovi(currentEntry, zamestnanec, i);
                if (globalResult.success) {
                    celkemUspesnych++;
                }
            }
        }
        
        // Z√°vereƒçn√Ω log
        var vysledokSprava = "Notifik√°cie odoslan√©: " + celkemUspesnych + "/" + celkemZamestnancov + 
                            " zamestnancov (" + moment().format("DD.MM.YYYY HH:mm:ss") + ")";
        
        logDebug("üìä === FIN√ÅLNY V√ùSLEDOK ===");
        logDebug(vysledokSprava);
        
        // Ulo≈æ do Notifik√°cie Log
        var existujuciLog = currentEntry.field("Notifik√°cie Log") || "";
        currentEntry.set("Notifik√°cie Log", existujuciLog + vysledokSprava + "\n");
        
        // Informuj o v√Ωsledku
        if (celkemUspesnych === celkemZamestnancov) {
            logDebug("üéâ V≈°etky notifik√°cie √∫spe≈°ne odoslan√©!");
        } else if (celkemUspesnych > 0) {
            logDebug("‚ö†Ô∏è ƒåiastoƒçn√Ω √∫spech - niektor√© notifik√°cie zlyhali");
        } else {
            logError("V≈°etky notifik√°cie zlyhali", "MAIN");
        }
    }
    
} catch (criticalError) {
    logError(criticalError, "MAIN-CRITICAL");
}
